'use strict';

/*
–ü–æ–ª—è –±—É–¥—É—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –∫–∞—Å—Å–∏—Ä–∞ (üîî –æ–±—ä—è–≤–ª—è—é—Ç—Å—è –∫–∞–∫ this.–∏–º—è_–ø–æ–ª—è –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ):

name

- —Å—Ç—Ä–æ–∫–∞,
- –∏–º—è –∫–∞—Å—Å–∏—Ä–∞,
- –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞

customerMoney

- —Å—É–º–º–∞ –≤–≤–µ–¥–µ–Ω–Ω–∞—è –∫–ª–∏–µ–Ω—Ç–æ–º –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –¥–µ–Ω–µ–≥,
- –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
  - 0

totalPrice

- —Ö—Ä–∞–Ω–∏—Ç –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∫—É–ø–æ–∫ –∑–∞–∫–∞–∑–∞,
- –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
  - 0

change

- –∑–Ω–∞—á–µ–Ω–∏–µ —Å–¥–∞—á–∏ –∫–ª–∏–µ–Ω—Ç–∞,
- –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
  - 0

error

- —Å–≤–æ–π—Å—Ç–≤–æ —Ö—Ä–∞–Ω—è—â–µ–µ —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏,
- –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
  - null

METODS

greet()

- –º–µ—Ç–æ–¥,
- –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ name,
- –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–µ
  - –î–æ–±—Ä—ã–π –¥–µ–Ω—å, –≤–∞—Å –æ–±—Å–ª—É–∂–∏–≤–∞–µ—Ç ${name}

getCustomerMoney(value)

- –º–µ—Ç–æ–¥,
- –ø–æ–ª—É—á–∞–µ—Ç —á–∏—Å–ª–æ (–¥–µ–Ω—å–≥–∏ –∫–ª–∏–µ–Ω—Ç–∞),
- –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –µ–≥–æ –≤ —Å–≤–æ–π—Å—Ç–≤–æ customerMoney.

countTotalPrice(allProducts, order)

- –º–µ—Ç–æ–¥,
- –ø–æ–ª—É—á–∞–µ—Ç:
  - –æ–±—ä–µ–∫—Ç—ã –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏
  - —Å–ø–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫,
- —Å—á–∏—Ç–∞–µ—Ç –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∫—É–ø–æ–∫ –∏

  - –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Å–≤–æ–π—Å—Ç–≤–æ totalPrice.

- –ö–ª—é—á–∏ –æ–±—ä–µ–∫—Ç–∞ order –µ—Å—Ç—å –≤ –æ–±—ä–µ–∫—Ç–µ products,
  - –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∑–∞–ø–∏—Å–∞–Ω –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä allProducts.
- –ò–∑ order –±–µ—Ä–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–∏—Ü –ø—Ä–æ–¥—É–∫—Ç–∞,
- –∞ –∏–∑ allProducts —Ü–µ–Ω—É –∑–∞ –æ–¥–Ω—É —à—Ç—É–∫—É –∏ —É–º–Ω–æ–∂–∞–µ–º,

  - —Ç–∞–∫ –ø–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –∑–∞–∫–∞–∑–µ.

- –ß—Ç–æ–±—ã –ø–æ—Å—á–∏—Ç–∞—Ç—å —Ü–µ–Ω—É –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∑–∞–∫–∞–∑–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏–∫–ª, –ø–µ—Ä–µ–±—Ä–∞–≤ –≤—Å–µ
  –∫–ª—é—á–∏ order.

countChange()

- –º–µ—Ç–æ–¥,
- —Å—á–∏—Ç–∞–µ—Ç —Å–¥–∞—á—É,
- —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –æ–±—â–µ–π —Å—É–º–º–æ–π –ø–æ–∫—É–ø–æ–∫ –∏ –¥–µ–Ω—å–≥–∞–º–∏ –∫–ª–∏–µ–Ω—Ç–∞,

  - –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Å–≤–æ–π—Å—Ç–≤–æ change.

- !!! –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ customerMoney –Ω–µ –º–µ–Ω—å—à–µ –∑–Ω–∞—á–µ–Ω–∏—è

- –ï—Å–ª–∏ –¥–µ–Ω–µ–≥ –±—ã–ª–æ –ø–µ—Ä–µ–¥–∞–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ,
  - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –¥–µ–Ω–µ–≥.
- –ï—Å–ª–∏ –≤ customerMoney –º–µ–Ω—å—à–µ –¥–µ–Ω–µ–≥ —á–µ–º –≤ totalPrice,
  - –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ —Å–≤–æ–π—Å—Ç–≤–æ error —Å—Ç—Ä–æ–∫—É
    - –í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ –ø–æ–∫—É–ø–∫–∏.

onSuccess()

- –º–µ—Ç–æ–¥,
- –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ change –∏
- –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ç—Ä–æ–∫—É
  - –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É, –≤–∞—à–∞ —Å–¥–∞—á–∞ ${change}!

onError()

- –º–µ—Ç–æ–¥,
- –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ error

reset()

- –º–µ—Ç–æ–¥,
- —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø–æ–ª—è –≤ –∏—Å—Ö–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:
  - customerMoney,
  - totalPrice,
  - change,
  - error
*/
// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

const products = {
  bread: 10,
  milk: 15,
  apples: 20,
  chicken: 50,
  cheese: 40,
};

const order = {
  bread: 2,
  milk: 2,
  apples: 1,
  cheese: 1,
};

function Cashier(name = '') {
  this.name = name;
  this.customerMoney = 0;
  this.totalPrice = 0;
  this.change = 0;
  this.error = null;

  this.greet = function() {
    console.log(`–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –≤–∞—Å –æ–±—Å–ª—É–∂–∏–≤–∞–µ—Ç ${this.name}`);
  };

  this.getCustomerMoney = function(value) {
    this.customerMoney = value;
  };

  this.countTotalPrice = function(allProducts, order) {
    const orderKeys = Object.keys(order);
    let total = 0;

    for (const key of orderKeys) {
      if (allProducts[key]) {
        total += allProducts[key] * order[key];
      }
    }

    this.totalPrice = total;
  };

  this.countChange = function() {
    const isCustomerMoneyEnought = this.customerMoney >= this.totalPrice;

    if (!isCustomerMoneyEnought) {
      this.error = '–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ –ø–æ–∫—É–ø–∫–∏.';
      return;
    }

    this.change = this.customerMoney - this.totalPrice;
  };

  this.onSuccess = function() {
    console.log(`–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É, –≤–∞—à–∞ —Å–¥–∞—á–∞ ${this.change}!`);
  };

  this.onError = function() {
    console.log(this.error);
  };

  this.reset = function() {
    this.customerMoney = 0;
    this.totalPrice = 0;
    this.change = 0;
    this.error = null;
  };
}

const poly = new Cashier('Poly');
const mango = new Cashier('Mango');
const ajax = new Cashier('Ajax');

console.log(mango); // –æ–±—ä–µ–∫—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ –∏ name —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ Mango
console.log(ajax); // –æ–±—ä–µ–∫—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ –∏ name —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ Ajax

// // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π
console.log(poly.name); // Poly
console.log(poly.customerMoney); // 0
console.log(poly.totalPrice); // 0
console.log(poly.change); // 0
console.log(poly.error); // null

poly.greet(); // –î–æ–±—Ä—ã–π –¥–µ–Ω—å, –≤–∞—Å –æ–±—Å–ª—É–∂–∏–≤–∞–µ—Ç Poly

// –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ countTotalPrice –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –æ–±—â–µ–π —Å—É–º–º—ã
// –ø–µ—Ä–µ–¥–∞–≤–∞—è products - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
// –∏ order - —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –∫–ª–∏–µ–Ω—Ç–∞
poly.countTotalPrice(products, order);

// –ü—Ä–æ–≤–µ—Ä—è–º —á—Ç–æ –ø–æ—Å—á–∏—Ç–∞–ª–∏
console.log(poly.totalPrice); // 110

// –í—ã–∑—ã–≤–∞–µ–º getCustomerMoney –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥–µ–Ω–µ–≥ –∫–ª–∏–µ–Ω—Ç–∞
poly.getCustomerMoney(300);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤ –ø–æ–ª–µ —Å –¥–µ–Ω—å–≥–∞–º–∏ –∫–ª–∏–µ–Ω—Ç–∞
console.log(poly.customerMoney); // 300

// –í—ã–∑—ã–≤–∞–µ–º countChange –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å–¥–∞—á–∏
poly.countChange();

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞–º –≤–µ—Ä–Ω—É–ª countChange
console.log(poly.change); // 190

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–¥—Å—á–µ—Ç–∞ –¥–µ–Ω–µ–≥
if (poly.error === null) {
  // –ü—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏ –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ onSuccess
  poly.onSuccess(); // –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É, –≤–∞—à–∞ —Å–¥–∞—á–∞ 190
} else {
  // –ü—Ä–∏ –Ω–µ—É–¥–∞—á–Ω–æ–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏ –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ onError
  poly.onError(); // –û—á–µ–Ω—å –∂–∞–ª—å, –≤–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ –ø–æ–∫—É–ø–∫–∏
}

// –í—ã–∑—ã–≤–∞–µ–º reset –ø—Ä–∏ –ª—é–±–æ–º –∏—Å—Ö–æ–¥–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
poly.reset();

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ—Å–ª–µ reset
console.log(poly.customerMoney); // 0
console.log(poly.totalPrice); // 0
console.log(poly.change); // 0
console.log(poly.error); // null
