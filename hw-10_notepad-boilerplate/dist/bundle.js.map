{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/notepad-model.js","webpack:///./js/utils/constants.js","webpack:///./js/view.js","webpack:///./js/handlers.js","webpack:///./index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Notepad","notes","arguments","length","undefined","_classCallCheck","this","_notes","priorityId","PRIORITIES","Math","random","toString","substring","id","find","note","title","body","generateUniqueId","priority","PRIORITY_TYPES","LOW","push","findNoteById","filter","updatedContent","map","_objectSpread","query","concat","toLowerCase","includes","NORMAL","HIGH","0","1","2","DELETE","EDIT","INCREASE_PRIORITY","DECREASE_PRIORITY","ARROW_DOWN","ARROW_UP","getRefs","searchNotesByQuery","document","querySelector","notesList","noteEditor","list","createFooterSection","footerSection","createElement","classList","add","createActionButton","noteAction","iconType","button","dataset","action","icon","textContent","appendChild","createNoteFooter","noteFooter","prioritySection","NOTE_ACTIONS","ICON_TYPES","expandMoreButton","expandLessButton","notePriority","createNotePriority","editSection","editButton","deleteButton","append","createListItem","_ref","listItem","noteBox","noteContent","contentBox","noteTitle","noteBody","createNoteContent","renderNoteList","listRef","listItems","innerHTML","apply","_toConsumableArray","refs","__webpack_exports__","notepad","initialNotes","addEventListener","e","preventDefault","_e$currentTarget$elem","_slicedToArray","currentTarget","elements","input","textaria","titleText","bodyText","trim","alert","savedNote","saveNote","reset","removeListItem","target","parentNode","closest","deleteNote","remove","_ref2","inputQuery","foundNotes","filterNotesByQuery"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","import {\r\n  PRIORITY_TYPES,\r\n  ICON_TYPES,\r\n  NOTE_ACTIONS,\r\n  PRIORITIES,\r\n} from './utils/constants';\r\n\r\n// Конструктор Notepad при инициализации принимает массив заметок\r\n\r\n//  Model\r\nexport default class Notepad {\r\n  // Карта приоритетов.\r\n  static PRIORITY_TYPES = PRIORITY_TYPES;\r\n  static PRIORITIES = PRIORITIES;\r\n\r\n  // Карта действий над заметками для подстановки констант\r\n  static NOTE_ACTIONS = NOTE_ACTIONS;\r\n\r\n  // Карта имен иконок\r\n  static ICON_TYPES = ICON_TYPES;\r\n\r\n  static getPriorityName(priorityId) {\r\n    /*\r\n     * Получает: идентификатор приоритета\r\n     * Возвращает: значение поля name из карты приоритетов.\r\n     */\r\n    return this.PRIORITIES[priorityId].name;\r\n  }\r\n\r\n  // Generator Note ID (Генератор идентификатора. Вернет уникальную строку при каждом вызове.)\r\n  static generateUniqueId() {\r\n    return (\r\n      Math.random()\r\n        .toString(36)\r\n        .substring(2, 15) +\r\n      Math.random()\r\n        .toString(36)\r\n        .substring(2, 15)\r\n    );\r\n  }\r\n\r\n  constructor(notes = []) {\r\n    this._notes = notes;\r\n  }\r\n\r\n  get notes() {\r\n    /*\r\n     * Принимает: ничего\r\n     * Возвращает: все заметки, значение свойства notes\r\n     */\r\n    return this._notes;\r\n  }\r\n\r\n  findNoteById(id) {\r\n    /*\r\n     * Ищет заметку в массиве notes\r\n     *\r\n     * Принимает: идентификатор заметки\r\n     * Возвращает: заметку с совпавшим полем id или undefined если ничего не найдено\r\n     */\r\n    return this.notes.find(note => note.id === id);\r\n  }\r\n\r\n  saveNote(title, body) {\r\n    /*\r\n     * Сохраняет заметку в массив notes\r\n     *\r\n     * Принимает: объект заметки\r\n     * Возвращает: сохраненную заметку\r\n     */\r\n    const note = {\r\n      id: Notepad.generateUniqueId(),\r\n      title: title,\r\n      body: body,\r\n      priority: Notepad.PRIORITY_TYPES.LOW,\r\n    };\r\n\r\n    this._notes.push(note);\r\n\r\n    return note;\r\n  }\r\n\r\n  deleteNote(id) {\r\n    /*\r\n     * Удаляет заметку по идентификатору из массива notes\r\n     *\r\n     * Принимает: идентификатор заметки\r\n     * Возвращает: ничего\r\n     */\r\n    const note = this.findNoteById(id);\r\n    if (!note) return;\r\n\r\n    this._notes = this._notes.filter(note => note.id !== id);\r\n  }\r\n\r\n  updateNoteContent(id, updatedContent) {\r\n    /*\r\n     * Обновляет контент заметки\r\n     * updatedContent - объект с полями вида {имя: значение, имя: значение}\r\n     * Свойств в объекте updatedContent может быть произвольное количество\r\n     *\r\n     * Принимает: идентификатор заметки и объект, полями которого надо обновить заметку\r\n     * Возвращает: обновленную заметку\r\n     */\r\n    let note = this.findNoteById(id);\r\n    if (!note) return;\r\n\r\n    this._notes = this._notes.map(note =>\r\n      note.id === id ? { ...note, ...updatedContent } : note,\r\n    );\r\n\r\n    return this.findNoteById(id);\r\n  }\r\n\r\n  updateNotePriority(id, priority) {\r\n    /*\r\n     * Обновляет приоритет заметки\r\n     *\r\n     * Принимает: идентификатор заметки и ее новый приоритет\r\n     * Возвращает: обновленную заметку\r\n     */\r\n    const note = this.findNoteById(id);\r\n    if (!note) return;\r\n\r\n    this._notes = this._notes.map(note =>\r\n      note.id === id ? { ...note, priority: priority } : note,\r\n    );\r\n\r\n    return this.findNoteById(id);\r\n  }\r\n\r\n  filterNotesByQuery(query = '') {\r\n    /*\r\n     * Фильтрует массив заметок по подстроке query.\r\n     * Если значение query есть в заголовке или теле заметки - она подходит\r\n     *\r\n     * Принимает: подстроку для поиска в title и body заметки\r\n     * Возвращает: новый массив заметок, контент которых содержит подстроку\r\n     */\r\n    return this._notes.filter(note => {\r\n      const noteContent = `${note.title} ${note.body}`;\r\n      const hasQuery = noteContent.toLowerCase().includes(query.toLowerCase());\r\n\r\n      if (hasQuery) {\r\n        return note;\r\n      }\r\n    });\r\n  }\r\n\r\n  filterNotesByPriority(priority) {\r\n    /*\r\n     * Фильтрует массив заметок по значению приоритета\r\n     * Если значение priority совпадаем с приоритетом заметки - она подходит\r\n     *\r\n     * Принимает: приоритет для поиска в свойстве priority заметки\r\n     * Возвращает: новый массив заметок с подходящим приоритетом\r\n     */\r\n    return this._notes.filter(note => note.priority === priority);\r\n  }\r\n}\r\n","export const PRIORITY_TYPES = {\n  LOW: 0,\n  NORMAL: 1,\n  HIGH: 2,\n};\n\nexport const ICON_TYPES = {\n  EDIT: 'edit',\n  DELETE: 'delete',\n  ARROW_DOWN: 'expand_more',\n  ARROW_UP: 'expand_less',\n};\n\nexport const NOTE_ACTIONS = {\n  DELETE: 'delete-note',\n  EDIT: 'edit-note',\n  INCREASE_PRIORITY: 'increase-priority',\n  DECREASE_PRIORITY: 'decrease-priority',\n};\n\nexport const PRIORITIES = {\n  0: { id: 0, value: 0, name: 'Low' },\n  1: { id: 1, value: 1, name: 'Normal' },\n  2: { id: 2, value: 2, name: 'High' },\n};\n","import Notepad from './notepad-model';\r\nimport { notepad } from '../index';\r\n\r\n// Refs\r\nexport const getRefs = () => ({\r\n  searchNotesByQuery: document.querySelector('form .search-form__input'),\r\n  notesList: document.querySelector('ul.note-list'),\r\n  noteEditor: document.querySelector('form.note-editor'),\r\n  list: document.querySelector('.note-list'),\r\n});\r\n\r\n// UI\r\nconst createNoteContent = (title, body) => {\r\n  const contentBox = document.createElement('div');\r\n  contentBox.classList.add('note__content');\r\n\r\n  const noteTitle = document.createElement('h2');\r\n  noteTitle.classList.add('note__title');\r\n  noteTitle.textContent = title;\r\n\r\n  const noteBody = document.createElement('p');\r\n  noteBody.classList.add('note__body');\r\n  noteBody.textContent = body;\r\n\r\n  contentBox.append(noteTitle, noteBody);\r\n\r\n  return contentBox;\r\n};\r\n\r\nconst createFooterSection = () => {\r\n  const footerSection = document.createElement('section');\r\n  footerSection.classList.add('note__section');\r\n\r\n  return footerSection;\r\n};\r\n\r\nconst createActionButton = (noteAction, iconType) => {\r\n  const button = document.createElement('button');\r\n  button.classList.add('action');\r\n  button.dataset.action = noteAction;\r\n\r\n  const icon = document.createElement('i');\r\n  icon.classList.add('material-icons');\r\n  icon.classList.add('action__icon');\r\n  icon.textContent = iconType;\r\n\r\n  button.appendChild(icon);\r\n\r\n  return button;\r\n};\r\n\r\nconst createNotePriority = priority => {\r\n  const notePriority = document.createElement('span');\r\n  notePriority.classList.add('note__priority');\r\n  notePriority.textContent = `Priority: ${Notepad.PRIORITIES[priority].name}`;\r\n\r\n  return notePriority;\r\n};\r\n\r\nconst createNoteFooter = priority => {\r\n  const noteFooter = document.createElement('footer');\r\n  noteFooter.classList.add('note__footer');\r\n\r\n  // Priority Section\r\n  const prioritySection = createFooterSection();\r\n\r\n  const NOTE_ACTIONS = Notepad.NOTE_ACTIONS;\r\n  const ICON_TYPES = Notepad.ICON_TYPES;\r\n\r\n  const expandMoreButton = createActionButton(\r\n    NOTE_ACTIONS.DECREASE_PRIORITY,\r\n    ICON_TYPES.ARROW_DOWN,\r\n  );\r\n\r\n  const expandLessButton = createActionButton(\r\n    NOTE_ACTIONS.INCREASE_PRIORITY,\r\n    ICON_TYPES.ARROW_UP,\r\n  );\r\n\r\n  const notePriority = createNotePriority(priority);\r\n\r\n  // Edit Section\r\n  const editSection = createFooterSection();\r\n\r\n  const editButton = createActionButton(NOTE_ACTIONS.EDIT, ICON_TYPES.EDIT);\r\n\r\n  const deleteButton = createActionButton(\r\n    NOTE_ACTIONS.DELETE,\r\n    ICON_TYPES.DELETE,\r\n  );\r\n\r\n  prioritySection.append(expandMoreButton, expandLessButton, notePriority);\r\n\r\n  editSection.append(editButton, deleteButton);\r\n\r\n  noteFooter.append(prioritySection, editSection);\r\n\r\n  return noteFooter;\r\n};\r\n\r\nconst createListItem = ({ id, title, body, priority }) => {\r\n  const listItem = document.createElement('li');\r\n  listItem.classList.add('note-list__item');\r\n  listItem.dataset.id = id;\r\n\r\n  const noteBox = document.createElement('div');\r\n  noteBox.classList.add('note');\r\n\r\n  const noteContent = createNoteContent(title, body);\r\n\r\n  const noteFooter = createNoteFooter(priority);\r\n\r\n  noteBox.append(noteContent, noteFooter);\r\n\r\n  listItem.appendChild(noteBox);\r\n\r\n  return listItem;\r\n};\r\n\r\nexport const renderNoteList = (listRef, notes) => {\r\n  const listItems = notes.map(note => createListItem(note));\r\n\r\n  listRef.innerHTML = '';\r\n\r\n  listRef.append(...listItems);\r\n};\r\n\r\nexport const addListItem = (listRef, note) => {\r\n  const listItem = createListItem(note);\r\n\r\n  listRef.appendChild(listItem);\r\n};\r\n\r\nexport const removeListItem = item => {\r\n  const removeListItem = item.closest('.note-list__item');\r\n\r\n  notepad.deleteNote(removeListItem.dataset.id);\r\n\r\n  removeListItem.remove();\r\n};\r\n","import { getRefs, renderNoteList, addListItem, removeListItem } from './view';\r\nimport { notepad } from '../index';\r\n\r\nconst refs = getRefs();\r\n\r\n// Handlers\r\n\r\n/*\r\n  Добавление заметки\r\n  При сабмите формы form.note-editor в массив заметок экземпляра класса Notepad\r\n  Должен\r\n    - Добавляться новый объект,\r\n    - Свойства title и body которого вводит пользователь в поля формы.\r\n  Значение приоритета устанавливается в методе класса\r\n    - Изначально должно быть самым низким.\r\n  Идентификатор объекта пока что создаем сами,\r\n    Для этого\r\n      - Вызывай вспомогательную функцию generateUniqueId написанную ниже,\r\n        - она вернет уникальную строку при каждом вызове.\r\n\r\n  Во время сабмита формы:\r\n  Если хотя бы один из инпутов пустой,\r\n    - выводи alert с текстом 'Необходимо заполнить все поля!' и больше ничего не делай, то есть заметка не добавляется.\r\n  Если все поля заполнены,\r\n    - выполняй шаги описанные дальше,\r\n    - но при этом еще очисти поля формы.\r\n  После того как:\r\n    - произошел сабмит формы и\r\n    - в массив объектов была добавлена новая заметка,\r\n    в ul.note-list должен добавляться новый элемент с карточкой заметки.\r\n  Функции для добавления объекта в массив и создания элемента списка у тебя уже есть.\r\n    При этом\r\n      - рендерить весь список заново нет смысла,\r\n      Напиши функцию addListItem(listRef, note),\r\n      Которая:\r\n        - использует функцию создания элемента списка createListItem(note), и\r\n        - добавлят этот элемент в конец списка ul.note-list (параметр listRef).\r\n */\r\n\r\nexport const handleNoteEditorSubmit = e => {\r\n  e.preventDefault();\r\n\r\n  const [input, textaria] = e.currentTarget.elements;\r\n  const titleText = input.value;\r\n  const bodyText = textaria.value;\r\n\r\n  if (titleText.trim() === '' || bodyText.trim() === '') {\r\n    return alert('Необходимо заполнить все поля!');\r\n  }\r\n\r\n  const savedNote = notepad.saveNote(titleText, bodyText);\r\n\r\n  addListItem(refs.list, savedNote);\r\n\r\n  e.currentTarget.reset();\r\n};\r\n\r\n/*\r\n  Удаление заметки\r\n  Следующий шаг это\r\n    - Cделать удаление заметки по клику на кнопке с иконкой корзины,\r\n      - то есть с data-action=delete-note.\r\n\r\n    - Используй паттерн делегированя событий для отслеживания клика на списке ul.note-list и\r\n    - Проверяй куда кликнули,\r\n      Доступ к объекту события у тебя есть.\r\n  Узнать какой именно элемент необходимо удалить довольно просто,\r\n    У каждого элемента списка есть:\r\n      - data-атрибут\r\n        - data-id в котором указан идентификатор объекта заметки,\r\n      Метод для удаления элемента из массива объектов у тебя уже есть.\r\n  Для того чтобы получить ссылку на DOM-узел элемента списка и удалить его в интерфейсе,\r\n    Используй методы:\r\n      - el.closest() и\r\n      - el.remove().\r\n\r\n      Напиши функцию removeListItem()\r\n        Которая:\r\n          - скроет в себе реализацию удаления.\r\n*/\r\n\r\nexport const handleRemoveNote = ({ target }) => {\r\n  if (target.parentNode.dataset.action !== 'delete-note') return;\r\n\r\n  removeListItem(target);\r\n};\r\n\r\n/*\r\n  Фильтрация заметок\r\n  Последним шагом будет фильтрация по подстроке.\r\n  Каждый раз когда в инпут формы form.search-form что-то вводится,\r\n  Необходимо\r\n    - фильтровать массив заметок.\r\n\r\n    Метод фильтрации массива у тебя уже есть.\r\n\r\n    - После того как произведена фильтрация массива,\r\n    - отрисуй отфильтрованные заметки функцию renderNoteList (да, просто рисуем заново те что подошли).\r\n*/\r\n\r\nexport const handleSearchNotesByQuery = ({ target }) => {\r\n  const inputQuery = target.value;\r\n\r\n  const foundNotes = notepad.filterNotesByQuery(inputQuery);\r\n\r\n  renderNoteList(refs.list, foundNotes);\r\n};\r\n","import './sass/main.scss';\n\nimport initialNotes from './assets/notes.json';\nimport Notepad from './js/notepad-model';\nimport { getRefs, renderNoteList } from './js/view';\nimport {\n  handleNoteEditorSubmit,\n  handleRemoveNote,\n  handleSearchNotesByQuery,\n} from './js/handlers';\n\n// Notepad Instance initialization\nexport const notepad = new Notepad(initialNotes);\n\n// UI Refs\nconst refs = getRefs();\n\n// Render Initial Notes\nrenderNoteList(refs.list, notepad.notes);\n\n// Listeners\nrefs.noteEditor.addEventListener('submit', handleNoteEditorSubmit);\nrefs.notesList.addEventListener('click', handleRemoveNote);\nrefs.searchNotesByQuery.addEventListener('input', handleSearchNotesByQuery);\n"],"sourceRoot":""}